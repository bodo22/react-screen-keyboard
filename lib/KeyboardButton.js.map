{"version":3,"sources":["../src/KeyboardButton.js"],"names":["KeyboardButton","state","isPressed","handleClick","e","preventDefault","setState","props","onClick","value","handleRelease","pressedCls","classes","isDisabled","autofocus","PureComponent","propTypes","PropTypes","oneOfType","string","isRequired","node","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,c;;;;;;;;;;;;;;oMAEpBC,K,GAAQ;AACPC,cAAW;AADJ,G,QAiBRC,W,GAAc,aAAK;AAClBC,KAAEC,cAAF;AACA,SAAKC,QAAL,CAAc,EAAEJ,WAAW,IAAb,EAAd;AACA,SAAKK,KAAL,CAAWC,OAAX,CAAmB,MAAKD,KAAL,CAAWE,KAA9B;AACA,G,QAEDC,a,GAAgB,YAAM;AACrB,OAAI,MAAKT,KAAL,CAAWC,SAAX,KAAyB,IAA7B,EAAmC;AAClC,UAAKI,QAAL,CAAc,EAAEJ,WAAW,KAAb,EAAd;AACA;AACD,G;;;;;2BAEQ;;AAER,OAAMS,aAAa,KAAKV,KAAL,CAAWC,SAAX,KAAyB,IAAzB,GAAgC,yBAAhC,GAA4D,EAA/E;;AAEA,UACC;AAAA;AAAA;AACC,WAAK,QADN;AAEC,qCAA8B,KAAKK,KAAL,CAAWK,OAAzC,SAAoDD,UAFrD;AAGC,oBAAe,KAAKJ,KAAL,CAAWM,UAAX,GAAwB,IAAxB,GAA+B,KAAKV,WAHpD;AAIC,kBAAa,KAAKO,aAJnB;AAKC,mBAAc,KAAKA,aALpB;AAMC,qBAAgB,KAAKA,aANtB;AAOC,gBAAW,KAAKH,KAAL,CAAWO,SAPvB;AAQC,eAAU,KAAKP,KAAL,CAAWM;AARtB;AAUE,SAAKN,KAAL,CAAWE;AAVb,IADD;AAcA;;;;EAjD0CM,oB;;AAAvBf,c,CAMbgB,S,GAAY;AAClBP,QAAOQ,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAV,CAAiBC,UAAlB,EAA8BH,oBAAUI,IAAV,CAAeD,UAA7C,CAApB,CADW;AAElBR,UAASK,oBAAUE,MAFD;AAGlBL,YAAWG,oBAAUK,IAHH;AAIlBT,aAAYI,oBAAUK;AAJJ,C;AANCtB,c,CAabuB,Y,GAAe;AACrBX,UAAS,EADY;AAErBE,YAAW,KAFU;AAGrBD,aAAY;AAHS,C;kBAbFb,c","file":"KeyboardButton.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class KeyboardButton extends PureComponent {\n\n\tstate = {\n\t\tisPressed: false,\n\t}\n\n\tstatic propTypes = {\n\t\tvalue: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.node.isRequired]),\n\t\tclasses: PropTypes.string,\n\t\tautofocus: PropTypes.bool,\n\t\tisDisabled: PropTypes.bool,\n\t};\n\n\tstatic defaultProps = {\n\t\tclasses: '',\n\t\tautofocus: false,\n\t\tisDisabled: false,\n\t};\n\n\thandleClick = e => {\n\t\te.preventDefault();\n\t\tthis.setState({ isPressed: true });\n\t\tthis.props.onClick(this.props.value);\n\t}\n\n\thandleRelease = () => {\n\t\tif (this.state.isPressed === true) {\n\t\t\tthis.setState({ isPressed: false });\n\t\t}\n\t}\n\n\trender() {\n\n\t\tconst pressedCls = this.state.isPressed === true ? 'keyboard-button-pressed' : '';\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName={`keyboard-button ${this.props.classes} ${pressedCls}`}\n\t\t\t\tonPointerDown={this.props.isDisabled ? null : this.handleClick}\n\t\t\t\tonPointerUp={this.handleRelease}\n\t\t\t\tonPointerOut={this.handleRelease}\n\t\t\t\tonPointerLeave={this.handleRelease}\n\t\t\t\tautoFocus={this.props.autofocus}\n\t\t\t\tdisabled={this.props.isDisabled}\n\t\t\t>\n\t\t\t\t{this.props.value}\n\t\t\t</button>\n\t\t);\n\t}\n}\n"]}